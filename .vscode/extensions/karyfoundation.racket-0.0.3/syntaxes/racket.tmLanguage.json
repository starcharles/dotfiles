{
    "fileTypes": [
		".rkt"
    ],
    "name": "Racket",
    "patterns": [{
		"include": "#expression"
	}],
    "repository": {
        "comment": {
			"match": ";.*$\\n?",
            "name": "comment.line.racket"
        },
        "number": {
            "match": "\\b(0x[0-9a-f]+|[0-9]+(?:\\.[0-9]+)?)\\b",
            "name": "constant.numeric.racket"
		},
		"identifier": {
			"match": "\\b\\w(?:[^\\s\\(\\)\\[\\]\\.])+\\b",
            "name": "constant.numeric.racket"
		},
		"struct": {
			"match": "\\((?:\\s)*(struct)(?:\\s)+((?:[^\\s(])+)(?:\\s)*\\(((?:[^\\)])+)\\)",
			"captures": {
				"1": {
					"name": "storage.type.class.racket"
				},
				"2": {
					"name": "entity.name.type.class.racket"
				},
				"3": {
					"name": "variable.other.racket"
				}
			}
		},
		"s-expression-name": {
			"match": "\\((?:\\s)*([^'\"\\:#\\/\\(\\)\\[\\]0-9](?:[^\\)\\]\\(\\[\\s])*)",
			"captures": {
				"1": {
					"name": "entity.name.function.racket"
				}
			}
		},
		"string-double": {
			"match": "\"(?:(?:\\\\\"|[^\"]))*\"",
			"name": "string.double.racket"
		},
		"keyword": {
			"match": "#(?:[^\\s\\(\\)\\[\\]\\.])+",
			"name": "storage.type.class.racket"
		},
        "expression": {
            "name": "expression.racket",
            "patterns": [
				{
					"include": "#keyword"
				},
                {
                    "include": "#number"
                },
				{
					"include": "#identifier"
				},
				{
					"include": "#string-double"
				},
				{
					"include": "#comment"
				},
				{
					"include": "#struct"
				},
                {
                    "include": "#s-expression-name"
				}
            ]
        }
    },
    "scopeName": "source.racket"
}