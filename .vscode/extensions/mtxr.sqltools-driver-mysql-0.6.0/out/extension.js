var __create=Object.create;var __defProp=Object.defineProperty;var __defProps=Object.defineProperties;var __getOwnPropDesc=Object.getOwnPropertyDescriptor;var __getOwnPropDescs=Object.getOwnPropertyDescriptors;var __getOwnPropNames=Object.getOwnPropertyNames;var __getOwnPropSymbols=Object.getOwnPropertySymbols;var __getProtoOf=Object.getPrototypeOf;var __hasOwnProp=Object.prototype.hasOwnProperty;var __propIsEnum=Object.prototype.propertyIsEnumerable;var __defNormalProp=(obj,key,value)=>key in obj?__defProp(obj,key,{enumerable:true,configurable:true,writable:true,value}):obj[key]=value;var __spreadValues=(a,b)=>{for(var prop in b||(b={}))if(__hasOwnProp.call(b,prop))__defNormalProp(a,prop,b[prop]);if(__getOwnPropSymbols)for(var prop of __getOwnPropSymbols(b)){if(__propIsEnum.call(b,prop))__defNormalProp(a,prop,b[prop])}return a};var __spreadProps=(a,b)=>__defProps(a,__getOwnPropDescs(b));var __commonJS=(cb,mod)=>function __require(){return mod||(0,cb[__getOwnPropNames(cb)[0]])((mod={exports:{}}).exports,mod),mod.exports};var __export=(target,all)=>{for(var name2 in all)__defProp(target,name2,{get:all[name2],enumerable:true})};var __copyProps=(to,from,except,desc)=>{if(from&&typeof from==="object"||typeof from==="function"){for(let key of __getOwnPropNames(from))if(!__hasOwnProp.call(to,key)&&key!==except)__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable})}return to};var __toESM=(mod,isNodeMode,target)=>(target=mod!=null?__create(__getProtoOf(mod)):{},__copyProps(isNodeMode||!mod||!mod.__esModule?__defProp(target,"default",{value:mod,enumerable:true}):target,mod));var __toCommonJS=mod=>__copyProps(__defProp({},"__esModule",{value:true}),mod);var require_package=__commonJS({"package.json"(exports,module2){module2.exports={name:"sqltools-driver-mysql",displayName:"SQLTools MySQL/MariaDB/TiDB",description:"SQLTools MySQL/MariaDB/TiDB",version:"0.6.0",engines:{vscode:"^1.72.0"},publisher:"mtxr",license:"MIT",private:true,repository:{type:"git",url:"https://github.com/mtxr/vscode-sqltools.git",directory:"packages/drivers.mysql"},bugs:{url:"https://github.com/mtxr/vscode-sqltools/labels/mysql"},keywords:["sqltools-driver","mysql","mariadb","tidb"],galleryBanner:{theme:"light",color:"#fafafa"},icon:"icon.png",categories:["Programming Languages","Snippets","Formatters","Other"],extensionDependencies:["mtxr.sqltools"],activationEvents:["*","onLanguage:sql","onCommand:sqltools.*"],main:"./out/extension.js",scripts:{"test:tsc":"tsc --noEmit -p ./tsconfig.json --skipLibCheck",clean:"rimraf -rf out dist *.vsix",predev:"yarn run clean",dev:"yarn run watch",prebuild:"yarn run clean && yarn run tsc-check",build:'cross-env NODE_ENV=production concurrently "npm:build:*"',"build:ext":`yarn run compile:ext --define:process.env.NODE_ENV="'production'" --minify-whitespace`,"build:ls":`yarn run compile:ls --define:process.env.NODE_ENV="'production'" --minify-whitespace`,esbuild:"esbuild --platform=node --tsconfig=./tsconfig.json --external:vscode --color=true --format=cjs",prepackage:"yarn run build",package:"vsce package --yarn -o .","compile:ext":`yarn run esbuild --bundle ./src/extension.ts --outfile=./out/extension.js --target=es2017 --define:process.env.PRODUCT="'ext'"`,"compile:ls":`yarn run esbuild --bundle ./src/ls/plugin.ts --outfile=./out/ls/plugin.js --target=es2015 --define:process.env.PRODUCT="'ls'"`,"tsc-check":"yarn run ts --noEmit --preserveWatchOutput",watch:'concurrently "npm:watch:*"',"watch:ext":`yarn run compile:ext --define:process.env.NODE_ENV="'development'" --sourcemap --watch`,"watch:ls":`yarn run compile:ls --define:process.env.NODE_ENV="'development'" --sourcemap --watch`,"dev:tsc":"yarn run tsc-check -w",ts:"tsc -p ."},devDependencies:{"@mysql/xdevapi":"^8.0.20","@sqltools/base-driver":"latest","@sqltools/types":"^0.1.7","@types/lodash":"^4.14.123","@types/mysql":"^2.15.12","compare-versions":"3.6.0",concurrently:"^5.2.0",esbuild:"^0.15.7",lodash:"^4.17.19",mysql2:"~3.1.2",rimraf:"^3.0.2",typescript:"~4.8.3",vsce:"1.77.0"}}}});var extension_exports={};__export(extension_exports,{activate:()=>activate,deactivate:()=>deactivate});module.exports=__toCommonJS(extension_exports);var vscode=__toESM(require("vscode"));var DRIVER_ALIASES=[{displayName:"MySQL",value:"MySQL"},{displayName:"MariaDB",value:"MariaDB"},{displayName:"TiDB",value:"TiDB"}];var AUTHENTICATION_PROVIDER="sqltools-driver-credentials";var{publisher,name}=require_package();var driverName="MySQL/MariaDB/TiDB";async function activate(extContext){const sqltools=vscode.extensions.getExtension("mtxr.sqltools");if(!sqltools){throw new Error("SQLTools not installed")}await sqltools.activate();const api=sqltools.exports;const extensionId=`${publisher}.${name}`;const plugin={extensionId,name:`${driverName} Plugin`,type:"driver",async register(extension){extension.resourcesMap().set(`driver/${DRIVER_ALIASES[0].value}/icons`,{active:extContext.asAbsolutePath("icons/active.png"),default:extContext.asAbsolutePath("icons/default.png"),inactive:extContext.asAbsolutePath("icons/inactive.png")});extension.resourcesMap().set(`driver/${DRIVER_ALIASES[1].value}/icons`,{active:extContext.asAbsolutePath("icons/mariadb/active.png"),default:extContext.asAbsolutePath("icons/mariadb/default.png"),inactive:extContext.asAbsolutePath("icons/mariadb/inactive.png")});extension.resourcesMap().set(`driver/${DRIVER_ALIASES[2].value}/icons`,{active:extContext.asAbsolutePath("icons/tidb/active.png"),default:extContext.asAbsolutePath("icons/tidb/default.png"),inactive:extContext.asAbsolutePath("icons/tidb/inactive.png")});DRIVER_ALIASES.forEach(({value})=>{extension.resourcesMap().set(`driver/${value}/extension-id`,extensionId);extension.resourcesMap().set(`driver/${value}/connection-schema`,extContext.asAbsolutePath("connection.schema.json"));extension.resourcesMap().set(`driver/${value}/ui-schema`,extContext.asAbsolutePath("ui.schema.json"))});await extension.client.sendRequest("ls/RegisterPlugin",{path:extContext.asAbsolutePath("out/ls/plugin.js")})}};api.registerPlugin(plugin);return{driverName,parseBeforeSaveConnection:({connInfo})=>{const propsToRemove=["connectionMethod","id","usePassword"];if(connInfo.usePassword){if(connInfo.usePassword.toString().toLowerCase().includes("ask")){connInfo.askForPassword=true;propsToRemove.push("password")}else if(connInfo.usePassword.toString().toLowerCase().includes("empty")){connInfo.password="";propsToRemove.push("askForPassword")}else if(connInfo.usePassword.toString().toLowerCase().includes("save")){propsToRemove.push("askForPassword")}else if(connInfo.usePassword.toString().toLowerCase().includes("secure")){propsToRemove.push("password");propsToRemove.push("askForPassword")}}if(connInfo.connectString){propsToRemove.push("port");propsToRemove.push("askForPassword")}propsToRemove.forEach(p=>delete connInfo[p]);return connInfo},parseBeforeEditConnection:({connInfo})=>{const formData=__spreadProps(__spreadValues({},connInfo),{connectionMethod:"Server and Port"});if(connInfo.socketPath){formData.connectionMethod="Socket File"}else if(connInfo.connectString){formData.connectionMethod="Connection String"}if(connInfo.askForPassword){formData.usePassword="Ask on connect";delete formData.password}else if(typeof connInfo.password==="string"){delete formData.askForPassword;formData.usePassword=connInfo.password?"Save as plaintext in settings":"Use empty password"}else{formData.usePassword="SQLTools Driver Credentials"}return formData},resolveConnection:async({connInfo})=>{if(connInfo.password===void 0&&!connInfo.askForPassword&&!connInfo.connectString){const scopes=[connInfo.name,connInfo.username||""];let session=await vscode.authentication.getSession(AUTHENTICATION_PROVIDER,scopes,{silent:true});if(!session){session=await vscode.authentication.getSession(AUTHENTICATION_PROVIDER,scopes,{createIfNone:true})}if(session){connInfo.password=session.accessToken}}return connInfo},driverAliases:DRIVER_ALIASES}}function deactivate(){}0&&(module.exports={activate,deactivate});
