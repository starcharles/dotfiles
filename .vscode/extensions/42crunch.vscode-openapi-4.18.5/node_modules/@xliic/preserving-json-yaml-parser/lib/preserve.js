"use strict";
/*
 Copyright (c) 42Crunch Ltd. All rights reserved.
 Licensed under the GNU Affero General Public License version 3. See LICENSE.txt in the project root for license information.
*/
Object.defineProperty(exports, "__esModule", { value: true });
exports.copyPreservedValues = exports.setPreservedRootRange = exports.getPreservedRootRange = exports.setPreservedLocation = exports.getPreservedLocation = exports.setPreservedValue = exports.getPreservedValue = void 0;
const types_1 = require("./types");
function getPreservedValue(container, key) {
    var _a;
    return (_a = container === null || container === void 0 ? void 0 : container[types_1.preserveFormattingKey]) === null || _a === void 0 ? void 0 : _a[key];
}
exports.getPreservedValue = getPreservedValue;
function setPreservedValue(container, key, value) {
    if (container[types_1.preserveFormattingKey] === undefined) {
        Object.defineProperty(container, types_1.preserveFormattingKey, { enumerable: false, value: {} });
    }
    container[types_1.preserveFormattingKey][key] = value;
}
exports.setPreservedValue = setPreservedValue;
function getPreservedLocation(container, key) {
    var _a;
    return (_a = container === null || container === void 0 ? void 0 : container[types_1.preserveLocationKey]) === null || _a === void 0 ? void 0 : _a[key];
}
exports.getPreservedLocation = getPreservedLocation;
function setPreservedLocation(container, key, location) {
    if (container[types_1.preserveLocationKey] === undefined) {
        Object.defineProperty(container, types_1.preserveLocationKey, { enumerable: false, value: {} });
    }
    container[types_1.preserveLocationKey][key] = location;
}
exports.setPreservedLocation = setPreservedLocation;
function getPreservedRootRange(container) {
    return container[types_1.preserveRootRangeKey];
}
exports.getPreservedRootRange = getPreservedRootRange;
function setPreservedRootRange(container, range) {
    Object.defineProperty(container, types_1.preserveRootRangeKey, { enumerable: false, value: range });
}
exports.setPreservedRootRange = setPreservedRootRange;
function copyPreservedValues(src, dest) {
    if (src && src[types_1.preserveFormattingKey] !== undefined) {
        Object.defineProperty(dest, types_1.preserveFormattingKey, {
            enumerable: false,
            value: src[types_1.preserveFormattingKey],
        });
    }
    // Do not copy location data, cloned objects are likely to be used for
    // bundling OAS file that contain external references
    // so the resulting object will be a mix of data coming from different file
    // which makes location information
}
exports.copyPreservedValues = copyPreservedValues;
