"use strict";
/*
 Copyright (c) 42Crunch Ltd. All rights reserved.
 Licensed under the GNU Affero General Public License version 3. See LICENSE.txt in the project root for license information.
*/
Object.defineProperty(exports, "__esModule", { value: true });
exports.parseJsonPointer = exports.joinJsonPointer = exports.findLocationForPath = exports.findByPath = exports.findLocationForJsonPointer = exports.find = exports.findNodeAtOffset = exports.getRootRange = exports.getLocation = exports.simpleClone = exports.stringify = exports.parseYaml = exports.parseJson = exports.parse = void 0;
const clone_1 = require("./clone");
Object.defineProperty(exports, "simpleClone", { enumerable: true, get: function () { return clone_1.simpleClone; } });
const parse_1 = require("./parse");
Object.defineProperty(exports, "parseJson", { enumerable: true, get: function () { return parse_1.parseJson; } });
Object.defineProperty(exports, "parseYaml", { enumerable: true, get: function () { return parse_1.parseYaml; } });
const stringify_1 = require("./stringify");
Object.defineProperty(exports, "stringify", { enumerable: true, get: function () { return stringify_1.stringify; } });
const preserve_1 = require("./preserve");
Object.defineProperty(exports, "getLocation", { enumerable: true, get: function () { return preserve_1.getPreservedLocation; } });
Object.defineProperty(exports, "getRootRange", { enumerable: true, get: function () { return preserve_1.getPreservedRootRange; } });
const location_1 = require("./location");
Object.defineProperty(exports, "findLocationForJsonPointer", { enumerable: true, get: function () { return location_1.findLocationForJsonPointer; } });
Object.defineProperty(exports, "findLocationForPath", { enumerable: true, get: function () { return location_1.findLocationForPath; } });
Object.defineProperty(exports, "findNodeAtOffset", { enumerable: true, get: function () { return location_1.findNodeAtOffset; } });
const jsonpointer_1 = require("./jsonpointer");
Object.defineProperty(exports, "find", { enumerable: true, get: function () { return jsonpointer_1.find; } });
Object.defineProperty(exports, "joinJsonPointer", { enumerable: true, get: function () { return jsonpointer_1.joinJsonPointer; } });
Object.defineProperty(exports, "parseJsonPointer", { enumerable: true, get: function () { return jsonpointer_1.parseJsonPointer; } });
Object.defineProperty(exports, "findByPath", { enumerable: true, get: function () { return jsonpointer_1.findByPath; } });
function parse(text, languageId, options) {
    var _a;
    return languageId === "yaml" ? (0, parse_1.parseYaml)(text, (_a = options === null || options === void 0 ? void 0 : options.yaml) === null || _a === void 0 ? void 0 : _a.customTags) : (0, parse_1.parseJson)(text);
}
exports.parse = parse;
